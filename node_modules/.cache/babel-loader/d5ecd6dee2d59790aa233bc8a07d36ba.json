{"ast":null,"code":"var _jsxFileName = \"/Users/sankarasauvignon/Downloads/Around-The-World-main/frontend/src/components/common/Card.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { addFavourite } from \"../../reducks/favourites/operations\";\nimport { getFavourites } from \"../../reducks/favourites/selectors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Imglike from \"../../assets/img/favorite.svg\";\nimport Places from \"../../containers/Places\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Card = ({\n  place\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const clickFavourite = place => {\n    dispatch(addFavourite(place));\n  };\n\n  const selector = useSelector(state => state);\n  const favourites = getFavourites(selector);\n  const [showLikeButton, setShowLikeButton] = useState(true);\n  useEffect(() => {\n    let favoritePlace = favourites.filter(favourite => favourite.id == place.id);\n\n    if (favoritePlace.length > 0) {\n      setShowLikeButton(false);\n    }\n  }, [favourites]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"category-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-image\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: place.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"like\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Imglike,\n            onClick: () => {\n              clickFavourite(place);\n            },\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"category-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"category-heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridsubheading\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: place.place_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"gridtext\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\\"Opens\\\"\", place.time_to_travel, \"\\\"hours.\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: place.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-button\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: place.googel_map_link,\n            target: \"_blank\",\n            children: [\" \", \"Direction\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Card, \"xZKIlXOsp5XShWgoKa47hK7raw4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/sankarasauvignon/Downloads/Around-The-World-main/frontend/src/components/common/Card.jsx"],"names":["React","useEffect","useState","addFavourite","getFavourites","useSelector","useDispatch","Places","Card","place","dispatch","clickFavourite","selector","state","favourites","showLikeButton","setShowLikeButton","favoritePlace","filter","favourite","id","length","image","Imglike","name","place_type","time_to_travel","description","googel_map_link"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { addFavourite } from \"../../reducks/favourites/operations\";\nimport { getFavourites } from \"../../reducks/favourites/selectors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Imglike from \"../../assets/img/favorite.svg\";\nimport Places from \"../../containers/Places\";\n\nconst Card = ({ place }) => {\n  const dispatch = useDispatch();\n  const clickFavourite = (place) => {\n    dispatch(addFavourite(place));\n  };\n  const selector = useSelector((state) => state);\n  const favourites = getFavourites(selector);\n  const [showLikeButton, setShowLikeButton] = useState(true);\n  useEffect(() => {\n    let favoritePlace = favourites.filter(\n      (favourite) => favourite.id == place.id\n    );\n    if (favoritePlace.length > 0) {\n      setShowLikeButton(false);\n    }\n  }, [favourites]);\n\n  return (\n    <>\n        <div class=\"category-list\">\n          <div className=\"category-image\">\n            <img src={place.image} alt=\"\" />\n            <div class=\"like\">\n              <img\n                src={Imglike}\n                onClick={() => {\n                  clickFavourite(place);\n                }}\n                alt=\"\"\n              />\n            </div>\n          </div>\n          <div class=\"category-text\">\n            <div class=\"category-heading\">\n              <h1>{place.name}</h1>\n            </div>\n            <div class=\"gridsubheading\">\n              <h2>{place.place_type}</h2>\n            </div>\n            <div class=\"gridtext\">\n              <p>\"Opens\"{place.time_to_travel}\"hours.\"</p>\n\n              <p>{place.description}</p>\n            </div>\n            <div class=\"input-button\">\n              <a href={place.googel_map_link} target=\"_blank\">\n                {\" \"}\n                Direction{\" \"}\n              </a>\n            </div>\n          </div>\n        </div>\n    </>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}