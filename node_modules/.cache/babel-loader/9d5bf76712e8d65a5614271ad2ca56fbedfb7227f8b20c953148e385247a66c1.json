{"ast":null,"code":"import axios from \"axios\";\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\") {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = \"https://around-the-world-backend.herokuapp.com/\";\n}\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default class API {\n  constructor() {\n    this.getPlaces = async (search, category) => {\n      let url = \"/places/\";\n      let query = new URLSearchParams();\n      if (search) {\n        query.append(\"search\", search);\n      }\n      if (category) {\n        query.append(\"category\", category);\n      }\n      if (query.toString() != \"\") {\n        url += \"?\" + query.toString();\n      }\n      const places = await api.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return places;\n    };\n    this.getCategories = async () => {\n      const categories = await api.get(\"/categories/\").then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return categories;\n    };\n  }\n}","map":{"version":3,"names":["axios","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","API","getPlaces","search","category","url","query","URLSearchParams","append","toString","places","get","then","response","data","catch","error","Error","getCategories","categories"],"sources":["/Users/sankarasauvignon/Downloads/Around-The-World-main/frontend/src/API.js"],"sourcesContent":["import axios from \"axios\";\n\nvar baseURL;\nif (\n  process.env.REACT_APP_ENVIRONMENT &&\n  process.env.REACT_APP_ENVIRONMENT === \"PRODUCTION\"\n) {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = \"https://around-the-world-backend.herokuapp.com/\";\n}\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default class API {\n  getPlaces = async (search, category) => {\n    let url = \"/places/\";\n    let query = new URLSearchParams();\n    if (search) {\n      query.append(\"search\", search);\n    }\n    if (category) {\n      query.append(\"category\", category);\n    }\n\n    if (query.toString() != \"\") {\n      url += \"?\" + query.toString();\n    }\n\n    const places = await api\n      .get(url)\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return places;\n  };\n  getCategories = async () => {\n    const categories = await api\n      .get(\"/categories/\")\n      .then((response) => {\n        return response.data;\n      })\n      .catch((error) => {\n        throw new Error(error);\n      });\n    return categories;\n  };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAIC,OAAO;AACX,IACEC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IACjCF,OAAO,CAACC,GAAG,CAACC,qBAAqB,KAAK,YAAY,EAClD;EACAH,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACE,sBAAsB;AAC9C,CAAC,MAAM;EACLJ,OAAO,GAAG,iDAAiD;AAC7D;AAEA,MAAMK,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBN,OAAO,EAAEA,OAAO;EAChBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe,MAAMC,GAAG,CAAC;EAAA;IAAA,KACvBC,SAAS,GAAG,OAAOC,MAAM,EAAEC,QAAQ,KAAK;MACtC,IAAIC,GAAG,GAAG,UAAU;MACpB,IAAIC,KAAK,GAAG,IAAIC,eAAe,EAAE;MACjC,IAAIJ,MAAM,EAAE;QACVG,KAAK,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;MAChC;MACA,IAAIC,QAAQ,EAAE;QACZE,KAAK,CAACE,MAAM,CAAC,UAAU,EAAEJ,QAAQ,CAAC;MACpC;MAEA,IAAIE,KAAK,CAACG,QAAQ,EAAE,IAAI,EAAE,EAAE;QAC1BJ,GAAG,IAAI,GAAG,GAAGC,KAAK,CAACG,QAAQ,EAAE;MAC/B;MAEA,MAAMC,MAAM,GAAG,MAAMZ,GAAG,CACrBa,GAAG,CAACN,GAAG,CAAC,CACRO,IAAI,CAAEC,QAAQ,IAAK;QAClB,OAAOA,QAAQ,CAACC,IAAI;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;MACxB,CAAC,CAAC;MACJ,OAAON,MAAM;IACf,CAAC;IAAA,KACDQ,aAAa,GAAG,YAAY;MAC1B,MAAMC,UAAU,GAAG,MAAMrB,GAAG,CACzBa,GAAG,CAAC,cAAc,CAAC,CACnBC,IAAI,CAAEC,QAAQ,IAAK;QAClB,OAAOA,QAAQ,CAACC,IAAI;MACtB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChB,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;MACxB,CAAC,CAAC;MACJ,OAAOG,UAAU;IACnB,CAAC;EAAA;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}